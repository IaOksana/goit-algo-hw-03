# –ó–∞–≤–¥–∞–Ω–Ω—è 1

# –ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É –Ω–∞ Python, —è–∫–∞ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø—ñ—é—î —Ñ–∞–π–ª–∏ —É –≤–∏—Ö—ñ–¥–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, –ø–µ—Ä–µ–º—ñ—â–∞—î —ó—Ö –¥–æ –Ω–æ–≤–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —Ç–∞ —Å–æ—Ä—Ç—É—î –≤ –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, –Ω–∞–∑–≤–∏ —è–∫–∏—Ö –±–∞–∑—É—é—Ç—å—Å—è –Ω–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—ñ —Ñ–∞–π–ª—ñ–≤.


# –¢–∞–∫–æ–∂ –≤—ñ–∑—å–º—ñ—Ç—å –¥–æ —É–≤–∞–≥–∏ –Ω–∞—Å—Ç—É–ø–Ω—ñ —É–º–æ–≤–∏:

# 1. –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤. –°–∫—Ä–∏–ø—Ç –º–∞—î –ø—Ä–∏–π–º–∞—Ç–∏ –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞: —à–ª—è—Ö –¥–æ –≤–∏—Ö—ñ–¥–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —Ç–∞ 
# —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —è–∫—â–æ —Ç–µ–∫–∞ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –±—É–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞, –≤–æ–Ω–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ 
# –∑ –Ω–∞–∑–≤–æ—é dist).

# 2. –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ —á–∏—Ç–∞–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π:
# –ú–∞—î –±—É—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.
# –§—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–µ—Ä–µ–±–∏—Ä–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
# –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç —î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Å–∞–º—É —Å–µ–±–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–ª—è —Ü—ñ—î—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
# –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç —î —Ñ–∞–π–ª–æ–º, –≤—ñ–Ω –º–∞—î –±—É—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–º –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è.

# 3. –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤:
# –î–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É —Ñ–∞–π–ª—ñ–≤ –º–∞—î –±—É—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –Ω–æ–≤–∏–π —à–ª—è—Ö —É –≤–∏—Ö—ñ–¥–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É 
# –¥–ª—è –Ω–∞–∑–≤–∏ –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
# –§–∞–π–ª –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º —Ç–∏–ø–æ–º –º–∞—î –±—É—Ç–∏ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–∏–π —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é.

# 4. –û–±—Ä–æ–±–∫–∞ –≤–∏–Ω—è—Ç–∫—ñ–≤. –ö–æ–¥ –º–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–æ–±–ª—è—Ç–∏ –≤–∏–Ω—è—Ç–∫–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ–º–∏–ª–∫–∏ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ñ–∞–π–ª—ñ–≤ –∞–±–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π.

# –ó–∞–≤–¥–∞–Ω–Ω—è 1:

# 1. –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞: —à–ª—è—Ö –¥–æ –≤–∏—Ö—ñ–¥–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —Ç–∞ —à–ª—è—Ö 
# –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —è–∫—â–æ —Ç–µ–∫–∞ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –±—É–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞, –≤–æ–Ω–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ 
# –∑ –Ω–∞–∑–≤–æ—é dist).

# 2. –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ —á–∏—Ç–∞–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π:
# –ù–∞–ø–∏—Å–∞–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.
# –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–±–∏—Ä–∞—î –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
# –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç —î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é, —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î —Å–∞–º—É —Å–µ–±–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–ª—è —Ü—ñ—î—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
# –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç —î —Ñ–∞–π–ª–æ–º, –≤—ñ–Ω —î –æ–±—Ä–æ–±–ª–µ–Ω–∏–º –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è.

# 3. –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤:
# –î–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É —Ñ–∞–π–ª—ñ–≤ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–æ–≤–∏–π —à–ª—è—Ö —É –≤–∏—Ö—ñ–¥–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É –¥–ª—è 
# –Ω–∞–∑–≤–∏ –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
# –§–∞–π–ª –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º —Ç–∏–ø–æ–º –∫–æ–ø—ñ—é—î—Ç—å—Å—è —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é.

# 4. –û–±—Ä–æ–±–∫–∞ –≤–∏–Ω—è—Ç–∫—ñ–≤: –∫–æ–¥ –æ–±—Ä–æ–±–ª—è—î –≤–∏–Ω—è—Ç–∫–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ–º–∏–ª–∫–∏ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ñ–∞–π–ª—ñ–≤ –∞–±–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π.

# 5. –ü—ñ—Å–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–∏ –≤—Å—ñ —Ñ–∞–π–ª–∏ —É –≤–∏—Ö—ñ–¥–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –≤ –Ω–æ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é —Ç–∞ 
# —Ä–æ–∑—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∑–∞ —ó—Ö —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º.

import os
from pathlib import Path
import argparse
import shutil


def parse_folder(source, dist):
    try:
        for element in source.iterdir():
            if element.is_dir():
                print(f"Parse folder: {element.name}")
                parse_folder(element, dist)
            if element.is_file():
                # Get file extension (without the dot)
                file_extension = element.suffix.lstrip(".") or "no_extension"

                # Define the destination subdirectory based on the extension
                destination_subdir = dist / file_extension

                # Ensure the subdirectory exists
                destination_subdir.mkdir(parents=True, exist_ok=True)

                # Define the destination file path
                destination_file = destination_subdir / element.name

                # Check if the file already exists
                if not destination_file.exists():
                    shutil.copy(element, destination_file)
                    print(f"Copied {element.name} to {destination_subdir}")
                else:
                    print(f"File {element.name} already exists in {destination_subdir}, skipping copy.")
    except PermissionError:
        print(f"üö´ Permission denied: Unable to access '{source}' or '{dist}'.")

    except FileNotFoundError:
        print(f"‚ùå Error: The source file '{source}' was not found.")

    except OSError as e:
        print(f"‚ö†Ô∏è OS Error: {e}")

    except Exception as e:
        print(f"üî• Unexpected error: {e}")
        

def main(): #  command line example: python task1.py --source . --dist new_dist
    parser = argparse.ArgumentParser(description='Copying files sorted by extentions')
    parser.add_argument("--source", type=Path, required=True, help="Path to source folder")
    parser.add_argument("--dist", type=Path, default=Path('dist'), help="Path to dist folder")
    args = parser.parse_args()

    if os.path.exists(args.source):
        if not os.path.exists(args.dist):
            os.mkdir(args.dist)

        parse_folder(args.source, args.dist)        
    else:
        print("Please try with another valid path")


if __name__ == "__main__":
    main()